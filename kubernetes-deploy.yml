# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: group7-deployment
  labels:
    app: group7
spec:
  replicas: 3
  selector:
    matchLabels:
      app: group7
  template:
    metadata:
      labels:
        app: group7
    spec:
      # Pod
      containers:
      - name: group7
        image: proksch/showenv # TODO: Change this to our application Docker image
        ports:
        - containerPort: 8080
        env:
        - name: MODEL_HOST
          valueFrom:
            configMapKeyRef:
              name: my-config # Refer to ConfigMap
              key: host-name
        - name: DB_PWD
          valueFrom:
            secretKeyRef:
              name: my-secret # Refer to Secret
              key: db.pwd     
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: group7-service
spec:
  selector:
    app: group7
  ports:
    - port: 8080
      targetPort: 8080 # Should match the port our pods are running on   
---
# ServiceMonitor
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: my-monitor
  labels:
    release: promstack
spec:
  selector: 
    matchLabels:
      app: sms-web-service
  endpoints:
  - targetPort: 8080
    path: "/metrics"
    interval: 1s
---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: group7-ingress
spec:
  defaultBackend:
    service:
      name: group7-service
      port:
        number: 8080 # Should match the port our service is running on   
---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: group7-config
data:
  host-name: http://whatever
---
# Secret (base64 encoded) --> echo -n 'Text to encode' | base64
apiVersion: v1
kind: Secret
metadata:
  name: group7-secret
data:
  db.pwd: Zm9vYmFy