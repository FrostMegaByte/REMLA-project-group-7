name: CI

# Build on every branch every push and pull request change.
on: [push]

jobs:
  lint:
    name: Check project quality with `mllint` and `dslinter`
    runs-on: ubuntu-20.04

    steps:
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
          cache: 'pip'
        - run: pip install -r requirements.txt
        - run: pip test

      - name: Clone project
        uses: actions/checkout@v3

      - name: Install mllint
        run: pip install --upgrade mllint

      - name: Install dslinter
        run: pip install --upgrade dslinter

      - name: Run `mllint`
        run: mllint -o mllint-report.md

      - name: Upload `mllint` report
        uses: actions/upload-artifact@v3
        with:
          name: mllint-report.md
          path: mllint-report.md

      - name: run dslinter
        run:
          python -m pylint load-plugins=dslinter disable=all enable=import,unnecessary-iteration-pandas,unnecessary-iteration-tensorflow,nan-numpy,chain-indexing-pandas,datatype-pandas,column-selection-pandas,merge-parameter-pandas,inplace-pandas,dataframe-conversion-pandas,scaler-missing-scikitlearn,hyperparameters-scikitlearn,hyperparameters-tensorflow,hyperparameters-pytorch,memory-release-tensorflow,deterministic-pytorch,randomness-control-numpy,randomness-control-scikitlearn,randomness-control-tensorflow,randomness, control,pytorch,randomness-control-dataloader-pytorch,missing-mask-tensorflow,missing-mask-pytorch,tensor-array-tensorflow,forward-pytorch,gradient-clear-pytorch,data-leakage-scikitlearn,dependent-threshold-scikitlearn,dependent-threshold-tensorflow,dependent-threshold-pytorch --output-format=json:report.json,text:report.txt,colorized --reports=y .

      - name: Test with pytest
        run: |
          pip install pytest
          pip install pytest-cov
          pytest --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
