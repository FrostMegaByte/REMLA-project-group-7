name: Deploy - Version tag

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Parse version info from tag
        run: |
          VERSION=${GITHUB_REF:11}
          MAJOR=`echo "$VERSION" | cut -d . -f 1`
          MINOR=`echo "$VERSION" | cut -d . -f 2`
          PATCH=`echo "$VERSION" | cut -d . -f 3`
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV
          echo "version_patch=$PATCH" >> $GITHUB_ENV

      # TODO: Try to get the "if condition" to work. So we get an error when the VERSION.txt file hasn't been updated
      - name: Check if VERSION.txt is equal to version tag
        # if: $(cat VERSION.txt) != "${{ env.version }}"
        run: |
          echo "Update VERSION.txt to be equal to release version tag"
          echo "Release tag version: ${{ env.version }}"
          echo "VERSION.txt version: $(cat VERSION.txt)"
          echo "$(cat VERSION.txt) != ${{ env.version }}"
          if [[ $(cat VERSION.txt) != "${{ env.version }}-SNAPSHOT" ]]; then
            echo "If"
          else
            echo "Else"
          fi

      - name: Registry Login (ghcr.io)
        run: echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # - name: Build Docker image and push to ghcr.io
      #   run: |
      #     IMG=ghcr.io/${REPOSITORY,,}
      #     docker build \
      #       --tag $IMG:${{ env.version }} \
      #       --tag $IMG:${{ env.version_major }}.${{ env.version_minor }}.latest \
      #       --tag $IMG:${{ env.version_major }}.latest \
      #       --tag $IMG:latest \
      #       .
      #     docker push --all-tags $IMG
      #   env:
      #     REPOSITORY: "${{ github.repository }}"
